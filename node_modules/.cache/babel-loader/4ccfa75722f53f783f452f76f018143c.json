{"ast":null,"code":"var _jsxFileName = \"/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); //Add tasks \n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task \n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder \n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAE,KAAF,CAA9C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAOhB;;AACA,QAAMO,OAAO,GAAIC,IAAD,IAAU;AACtB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KACtB,KADW,IACF,CADT;AAEA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AACH,GALD,CARgB,CAgBhB;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACvBH,IAAAA,QAAQ,CAAED,KAAK,CAACU,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAF,CAAR;AACH,GAFD,CAjBgB,CAqBhB;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC3BH,IAAAA,QAAQ,CACJD,KAAK,CAACY,GAAN,CAAWT,IAAD,IACRA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGD,IAAJ;AAAUU,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACU;AAA1B,KAAjB,GAAsDV,IADxD,CADI,CAAR;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACG,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAF,CAAnC;AACG,MAAA,OAAO,EAAEA;AADZ;AAAA;AAAA;AAAA;AAAA,YADH,EAGIA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHnB,EAIQF,KAAK,CAACc,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AACO,MAAA,QAAQ,EAAES,UADjB;AAEO,MAAA,QAAQ,EAAEE;AAFjB;AAAA;AAAA;AAAA;AAAA,YADC,GAIM,kBARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CA1CD;;GAAMd,G;;KAAAA,G;AA4CN,eAAeA,GAAf","sourcesContent":["import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport {useState} from 'react';\nimport AddTask from './components/AddTask';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false);\n  const [tasks, setTasks] = useState([])\n\n\n  \n\n  //Add tasks \n  const addTask = (task) => {\n      const id = Math.floor(Math.random() * \n      10000) + 1\n      const newTask = { id, ...task }\n      setTasks([...tasks, newTask])\n  }\n\n\n  // Delete Task \n  const deleteTask = (id) => {\n      setTasks (tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder \n  const toggleReminder = (id) => {\n      setTasks(\n          tasks.map((task) => \n            task.id === id ? {...task, reminder: !task.reminder}: task)\n      )\n  }\n\n  return (\n      <div className=\"container\">\n         <Header onAdd={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask} />\n         {showAddTask && <AddTask onAdd={addTask} />}\n             {tasks.length > 0 ? (\n             <Tasks tasks={tasks} \n                    onDelete={deleteTask} \n                    onToggle={toggleReminder} />)\n                  :('No Tasks To Show')}\n         \n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}