{"ast":null,"code":"var _jsxFileName = \"/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //fetch tasks \n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Add tasks \n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/', {\n      method: 'POST'\n    }); //   const id = Math.floor(Math.random() * \n    //   10000) + 1\n    //   const newTask = { id, ...task }\n    //   setTasks([...tasks, newTask])\n  }; // Delete Task \n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder \n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","deleteTask","id","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAE,KAAF,CAA9C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,QAAQ,GAAG,YAAY;AACzB,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACH,KAHD;;AAKAD,IAAAA,QAAQ;AACX,GAPQ,EAOP,EAPO,CAAT,CALgB,CAcf;;AACA,QAAME,UAAU,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACH,GALF,CAfe,CAqBhB;;;AACA,QAAME,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC5B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA0B;AAC7CK,MAAAA,MAAM,EAAE;AADqC,KAA1B,CAAvB,CAD4B,CAI9B;AACA;AACA;AACA;AACD,GARD,CAtBgB,CAiChB;;;AACA,QAAMC,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,UAAMP,KAAK,CAAE,+BAA8BO,EAAG,EAAnC,EAAqC;AAC5CF,MAAAA,MAAM,EAAE;AADoC,KAArC,CAAX;AAGAV,IAAAA,QAAQ,CAAED,KAAK,CAACc,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYA,EAAnC,CAAF,CAAR;AACH,GALD,CAlCgB,CAyChB;;;AACA,QAAME,cAAc,GAAIF,EAAD,IAAQ;AAC3BZ,IAAAA,QAAQ,CACJD,KAAK,CAACgB,GAAN,CAAWN,IAAD,IACRA,IAAI,CAACG,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGH,IAAJ;AAAUO,MAAAA,QAAQ,EAAE,CAACP,IAAI,CAACO;AAA1B,KAAjB,GAAsDP,IADxD,CADI,CAAR;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACG,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAAnC;AACG,MAAA,OAAO,EAAEA;AADZ;AAAA;AAAA;AAAA;AAAA,YADH,EAGIA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHnB,EAIQT,KAAK,CAACkB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,KAAd;AACO,MAAA,QAAQ,EAAEY,UADjB;AAEO,MAAA,QAAQ,EAAEG;AAFjB;AAAA;AAAA;AAAA;AAAA,YADC,GAIM,kBARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CA9DD;;GAAMlB,G;;KAAAA,G;AAgEN,eAAeA,GAAf","sourcesContent":["import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport {useState, useEffect} from 'react';\nimport AddTask from './components/AddTask';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false);\n  const [tasks, setTasks] = useState([])\n\n\n  useEffect(() => {\n      const getTasks = async () => {\n          const tasksFromServer = await fetchTasks();\n          setTasks(tasksFromServer);\n      }\n\n      getTasks()\n  },[])\n\n   //fetch tasks \n   const fetchTasks = async () => {\n        const res = await fetch('http://localhost:5000/tasks')\n        const data = await res.json()\n\n        return data\n    }\n  //Add tasks \n  const addTask = async (task) => {\n      const res = await fetch('http://localhost:5000/',{\n          method: 'POST',\n      })\n    //   const id = Math.floor(Math.random() * \n    //   10000) + 1\n    //   const newTask = { id, ...task }\n    //   setTasks([...tasks, newTask])\n  }\n\n\n  // Delete Task \n  const deleteTask = async (id) => {\n      await fetch(`http://localhost:5000/tasks/${id}`,{\n          method: 'DELETE',\n      })\n      setTasks (tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder \n  const toggleReminder = (id) => {\n      setTasks(\n          tasks.map((task) => \n            task.id === id ? {...task, reminder: !task.reminder}: task)\n      )\n  }\n\n  return (\n      <div className=\"container\">\n         <Header onAdd={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask} />\n         {showAddTask && <AddTask onAdd={addTask} />}\n             {tasks.length > 0 ? (\n             <Tasks tasks={tasks} \n                    onDelete={deleteTask} \n                    onToggle={toggleReminder} />)\n                  :('No Tasks To Show')}\n         \n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}