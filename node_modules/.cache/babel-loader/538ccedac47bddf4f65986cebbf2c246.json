{"ast":null,"code":"var _jsxFileName = \"/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route, Router } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //fetch tasks \n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //fetch tasks \n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add tasks \n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); //   const id = Math.floor(Math.random() * \n    //   10000) + 1\n    //   const newTask = { id, ...task }\n    //   setTasks([...tasks, newTask])\n  }; // Delete Task \n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder \n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/realwat/Desktop/zination/React/React JS Crash Course/react-task-tracker/src/App.js"],"names":["BrowserRouter","Routes","Route","Router","Header","Footer","About","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map"],"mappings":"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","sourcesContent":["import { BrowserRouter, Routes, Route, Router } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Tasks from './components/Tasks';\nimport {useState, useEffect} from 'react';\nimport AddTask from './components/AddTask';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false);\n  const [tasks, setTasks] = useState([])\n\n\n  useEffect(() => {\n      const getTasks = async () => {\n          const tasksFromServer = await fetchTasks();\n          setTasks(tasksFromServer);\n      }\n\n      getTasks()\n  },[])\n\n   //fetch tasks \n   const fetchTasks = async () => {\n        const res = await fetch('http://localhost:5000/tasks')\n        const data = await res.json()\n\n        return data\n    }\n  //fetch tasks \n   const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n}\n  //Add tasks \n  const addTask = async (task) => {\n      const res = await fetch('http://localhost:5000/tasks',{\n          method: 'POST',\n          headers:{\n              'Content-type': 'application/json',\n          },\n          body: JSON.stringify(task),\n      })\n\n      const data = await res.json()\n      setTasks([...tasks, data])\n    //   const id = Math.floor(Math.random() * \n    //   10000) + 1\n    //   const newTask = { id, ...task }\n    //   setTasks([...tasks, newTask])\n  }\n\n\n  // Delete Task \n  const deleteTask = async (id) => {\n      await fetch(`http://localhost:5000/tasks/${id}`,{\n          method: 'DELETE',\n      })\n      setTasks (tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder \n  const toggleReminder = async (id) => {\n      const taskToToggle = await fetchTask(id)\n      const updTask = {...taskToToggle,\n         reminder: !taskToToggle.reminder}\n\n      const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n          method: 'PUT',\n          headers: {\n              'Content-type': 'application/json'\n          },\n          body: JSON.stringify(updTask),\n      })\n\n      const data = await res.json()\n\n      setTasks(\n          tasks.map((task) => \n            task.id === id ? {...task, reminder: data.reminder}: task)\n      )\n  }\n\n  return (\n         <BrowserRouter>\n             \n         </BrowserRouter>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}